#include <iostream>

using namespace std;

int partition(int A[] , int start , int end)
{
    int pivot = A[end];
    int partition_index = start;
    for (int i = start ; i < end ; i++)
    {
        if(A[i] <= pivot)
        {
            swap(A[i],A[partition_index]);
            partition_index++;
        }
    }
    swap(A[partition_index] , A[end]);
    return partition_index;
}

void quick_sort(int A[] , int start , int end)
{
    if(start < end)
    {
        int partition_index = partition(A , start , end);
        quick_sort(A , start , partition_index-1);
        quick_sort(A , partition_index+1 , end);
    }
}

int main()
{
    int A[] = {7 , 5 , 8 , 9 , 4 , 6 , 2 , 7 , 8 , 9 , 1 , 1 , 4 , 4 , 3 , 8 , 3};
    quick_sort(A , 0 , 16);
    for (int i = 0 ; i < 17 ; i++)
        cout<<A[i]<< "  ";
}
